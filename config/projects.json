[
    {
        "name": "Armchair Strategist - A Formula 1 Strategy Dashboard",
        "link": "https://armchair-strategist.dev/",
        "github": "https://github.com/Casper-Guo/Armchair-Strategist",
        "icons": [
            "Python",
            "pandas",
            "plotly",
            "aws",
            "nginx",
            "gunicorn"
        ],
        "description": "Implemented data transformation pipelines with Pandas. Developed interactive dashboard with plotly dash. Deployed on AWS using EC2, S3, and Route 53 with automated data refresh and daily code deployment.",
        "desktopImage": "/armchair-strategist.png"
    },
    {
        "name": "Image Colorization with Generative Adversarial Network (GAN)",
        "github": "https://github.com/MichiganDataScienceTeam/W23-Image-Colorization",
        "icons": [
            "Python",
            "Jupyter",
            "Pytorch",
            "TensorFlow",
            "Keras"
        ],
        "description": "Co-led a team of 15. Trained cGAN with U-Net architecture on 25,000-image MIRFLICKR dataset using slurm on University of Michigan's Great Lakes HPC Cluster",
        "desktopImage": "/cloud.jpg"
    },
    {
        "name": "Rate My Professors (RMP) Sentiment Analysis",
        "github": "https://github.com/Casper-Guo/EECS-486-RMP-Sentiment-Analysis",
        "icons": [
            "Python",
            "Jupyter",
            "pandas",
            "selenium",
            "scikit-learn"
        ],
        "description": "Scraped data of 3500 professors from RMP using selenium and beautifulsoup. Optimized and benchmarked seven models and three text encodings for sentiment analysis task. Achieved >0.80 precision and recall.",
        "desktopImage": "/rmp.png"
    },
    {
        "name": "Royal Game of Ur Optimizer",
        "github": "https://github.com/Casper-Guo/Optimal-Royal-Game",
        "icons": [
            "Python",
            "Rust"
        ],
        "description": "Built tournament-style evaluation CLI for game-playing agents. Implemented asynchronous dynamic programming value iteration in Rust to calculate the optimal strategy for an ancient board game.",
        "desktopImage": "/royal_game.svg"
    },
    {
        "name": "Sports Data Analysis and Visualization",
        "icons": [
            "Python",
            "Jupyter",
            "pandas",
            "plotly",
            "scikit-learn",
            "selenium"
        ],
        "description": "Led a team of 15 students who proposed and researched sports-related data stories. Taught exploratory data analysis, data visualization, machine learning and statistical modelling.",
        "desktopImage": "/sport_data.png"
    },
    {
        "name": "Reinforcement Learning Crashcourse",
        "github": "https://github.com/MichiganDataScienceTeam/F23-Reinforcement-Learning",
        "icons": [
            "Python",
            "Jupyter",
            "Pytorch",
            "gymnasium"
        ],
        "description": "Co-led a team of 10. Taught the basics of reinforcement learning and trained an agent to land a simulated lunar lander using advantage actor-critic method.",
        "desktopImage": "/lunar_lander.png"
    }
]